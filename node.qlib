template<typename T>
class Node {
    T val;
    Node* next;
    
public:
    Node(T val, Node* next) {
        val = val;
        next = next;
    }

    Node* get_next() {
        if (next != nullptr) return next;
        else return nullptr; // nullptrs are shit so extra safety never hurt anyone
    }

    bool is_linked() {
        return next != nullptr;
    }

    T& val() {
        return val;
    }
};
